# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  name: AutoTest
steps:
  - checkout: self
    clean: true
    persistCredentials: true
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x'
  - task: ado-testingextension@2
    displayName: "Create Test Cases"
    inputs:
      Operation: 'createTests'
      DevOpsUrl: 'https://dev.azure.com/rgcorp-projects'
      AzureProjectName: 'SampleDemo'
      PAT: '$(System.AccessToken)'
      DotnetExePath: 'dotnet'
      RepoName: ''
      FeatureFilePath: 'SpecFlowCalculator.Specs'
      AreTheseDotnetTests: 'true'    
  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      projects: '**/*.csproj'
      arguments: '--logger:"junit;LogFilePath=test-result.xml"'
      workingDirectory: 'SpecFlowCalculator.Specs'
  - task: 'ado-testingextension@2'
    displayName: 'Update Test Results to Test Plan'
    condition: always()
    inputs:
      Operation: 'updateTestResults'
      DevOpsUrl: 'https://dev.azure.com/rgcorp-projects'
      AzureProjectName: 'SampleDemo'
      PAT: '$(System.AccessToken)'
      DotnetExePath: 'dotnet'
      xmlResultFolder: 'SpecFlowCalculator.Specs'
      xmlNamingFormat: 'test-result'
      testPlan: '41'
      testSuite: '44'
      testConfiguration: '6'
      AreTheseDotnetTests: 'true'
  